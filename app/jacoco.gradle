apply plugin: 'jacoco'



jacoco {
    toolVersion = "0.8.2"
}

android {
    buildTypes {
        debug {
            /**打开覆盖率统计开关**/
            testCoverageEnabled = true
        }
    }

}

//源代码路径，有多少个module，就在这里写多少个路径，如果你只有app一个module，那么就写一个就可以
def coverageSourceDirs = [
        '../app/src/main/java'
]

//class文件路径，如果你只有app一个module，那么就写一个就可以
def coverageClassDirs = [
        '/app/build/intermediates/javac/debug/classes'
]

//生成报告task
tasks.register('jacocoTestReport', JacocoReport) {
    reports {
        xml.required = true
        html.required = true
    }
// 源代码路径，有多少个module，就在这里写多少个路径，如果你只有app一个module，那么就写一个就可以
    def SourceDirs = [
            '../app/src/main/java'
    ]
    sourceDirectories.from files(SourceDirs)

    classDirectories.from fileTree(
            //class文件路径（以项目 class 文件所在目录为准），如果你只有app一个module，那么就写一个就可以
            dir: "$buildDir/intermediates/javac/debug/classes",
            // 过滤不需要统计的class文件
            excludes: ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*']
    )
    executionData.from files(
            "$buildDir/outputs/code_coverage/coverage.ec"
    )
}

//初始化Jacoco Task
task jacocoInit() {
    group = "JacocoReport"
    doFirst {
        File file = new File("$buildDir/outputs/code-coverage/")
        if (!file.exists()) {
            file.mkdir();
        }
    }
}
